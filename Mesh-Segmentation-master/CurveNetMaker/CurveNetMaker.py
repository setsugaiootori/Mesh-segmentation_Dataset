# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'CurveNetMaker.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_CurveNetMakerClass(object):
    def setupUi(self, CurveNetMakerClass):
        CurveNetMakerClass.setObjectName("CurveNetMakerClass")
        CurveNetMakerClass.resize(1600, 1000)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(CurveNetMakerClass.sizePolicy().hasHeightForWidth())
        CurveNetMakerClass.setSizePolicy(sizePolicy)
        CurveNetMakerClass.setStyleSheet("")
        self.centralWidget = QtWidgets.QWidget(CurveNetMakerClass)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.centralWidget.sizePolicy().hasHeightForWidth())
        self.centralWidget.setSizePolicy(sizePolicy)
        self.centralWidget.setObjectName("centralWidget")
        self.openGLWidget = MyGLCanvas(self.centralWidget)
        self.openGLWidget.setGeometry(QtCore.QRect(0, 0, 1600, 930))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.openGLWidget.sizePolicy().hasHeightForWidth())
        self.openGLWidget.setSizePolicy(sizePolicy)
        self.openGLWidget.setAutoFillBackground(False)
        self.openGLWidget.setObjectName("openGLWidget")
        self.verticalLayoutWidget = QtWidgets.QWidget(self.centralWidget)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(10, 10, 202, 80))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout.setContentsMargins(11, 11, 11, 11)
        self.verticalLayout.setSpacing(6)
        self.verticalLayout.setObjectName("verticalLayout")
        self.FeatureCheckBox = QtWidgets.QCheckBox(self.verticalLayoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.FeatureCheckBox.sizePolicy().hasHeightForWidth())
        self.FeatureCheckBox.setSizePolicy(sizePolicy)
        self.FeatureCheckBox.setMinimumSize(QtCore.QSize(200, 0))
        self.FeatureCheckBox.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.FeatureCheckBox.setChecked(False)
        self.FeatureCheckBox.setObjectName("FeatureCheckBox")
        self.verticalLayout.addWidget(self.FeatureCheckBox)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.horizontalLayout.setSpacing(10)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.AlphaTxt = QtWidgets.QLabel(self.verticalLayoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.AlphaTxt.sizePolicy().hasHeightForWidth())
        self.AlphaTxt.setSizePolicy(sizePolicy)
        self.AlphaTxt.setMinimumSize(QtCore.QSize(0, 0))
        self.AlphaTxt.setMaximumSize(QtCore.QSize(60, 16777215))
        self.AlphaTxt.setAlignment(QtCore.Qt.AlignRight | QtCore.Qt.AlignTrailing | QtCore.Qt.AlignVCenter)
        self.AlphaTxt.setObjectName("AlphaTxt")
        self.horizontalLayout.addWidget(self.AlphaTxt)
        self.AlphaSpin = QtWidgets.QDoubleSpinBox(self.verticalLayoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.AlphaSpin.sizePolicy().hasHeightForWidth())
        self.AlphaSpin.setSizePolicy(sizePolicy)
        self.AlphaSpin.setMaximumSize(QtCore.QSize(60, 16777215))
        self.AlphaSpin.setAlignment(QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.AlphaSpin.setMaximum(10.0)
        self.AlphaSpin.setSingleStep(0.05)
        self.AlphaSpin.setProperty("value", 0.5)
        self.AlphaSpin.setObjectName("AlphaSpin")
        self.horizontalLayout.addWidget(self.AlphaSpin)
        self.label = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.label.setText("")
        self.label.setObjectName("label")
        self.horizontalLayout.addWidget(self.label)
        self.verticalLayout.addLayout(self.horizontalLayout)
        self.SmoothBoundaryCheckBox = QtWidgets.QCheckBox(self.verticalLayoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.SmoothBoundaryCheckBox.sizePolicy().hasHeightForWidth())
        self.SmoothBoundaryCheckBox.setSizePolicy(sizePolicy)
        self.SmoothBoundaryCheckBox.setMinimumSize(QtCore.QSize(200, 0))
        self.SmoothBoundaryCheckBox.setChecked(True)
        self.SmoothBoundaryCheckBox.setObjectName("SmoothBoundaryCheckBox")
        self.verticalLayout.addWidget(self.SmoothBoundaryCheckBox)
        CurveNetMakerClass.setCentralWidget(self.centralWidget)
        self.menuBar = QtWidgets.QMenuBar(CurveNetMakerClass)
        self.menuBar.setGeometry(QtCore.QRect(0, 0, 1600, 18))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.menuBar.sizePolicy().hasHeightForWidth())
        self.menuBar.setSizePolicy(sizePolicy)
        self.menuBar.setObjectName("menuBar")
        self.menuOpen = QtWidgets.QMenu(self.menuBar)
        self.menuOpen.setObjectName("menuOpen")
        self.menuSave = QtWidgets.QMenu(self.menuBar)
        self.menuSave.setObjectName("menuSave")
        CurveNetMakerClass.setMenuBar(self.menuBar)
        self.OpenMesh = QtWidgets.QAction(CurveNetMakerClass)
        self.OpenMesh.setObjectName("OpenMesh")
        self.SaveSegmentation = QtWidgets.QAction(CurveNetMakerClass)
        self.SaveSegmentation.setObjectName("SaveSegmentation")
        self.OpenMeshFile = QtWidgets.QAction(CurveNetMakerClass)
        self.OpenMeshFile.setObjectName("OpenMeshFile")
        self.menuOpen.addAction(self.OpenMeshFile)
        self.menuSave.addAction(self.SaveSegmentation)
        self.menuBar.addAction(self.menuOpen.menuAction())
        self.menuBar.addAction(self.menuSave.menuAction())

        self.retranslateUi(CurveNetMakerClass)
        self.OpenMeshFile.triggered.connect(CurveNetMakerClass.OpenMeshFile)
        self.SaveSegmentation.triggered.connect(CurveNetMakerClass.SaveCurveFile)
        self.AlphaSpin.valueChanged['double'].connect(CurveNetMakerClass.AlphaChanged)
        self.FeatureCheckBox.clicked.connect(CurveNetMakerClass.ShowFeatureLines)
        self.SmoothBoundaryCheckBox.clicked.connect(CurveNetMakerClass.SmoothBoundary)
        QtCore.QMetaObject.connectSlotsByName(CurveNetMakerClass)

    def retranslateUi(self, CurveNetMakerClass):
        _translate = QtCore.QCoreApplication.translate
        CurveNetMakerClass.setWindowTitle(_translate("CurveNetMakerClass", "CurveNetMaker"))
        self.FeatureCheckBox.setText(_translate("CurveNetMakerClass", "Show Feature Line"))
        self.AlphaTxt.setText(_translate("CurveNetMakerClass", "Alpha "))
        self.SmoothBoundaryCheckBox.setText(_translate("CurveNetMakerClass", "Smooth Boundary"))
        self.menuOpen.setTitle(_translate("CurveNetMakerClass", "Open"))
        self.menuSave.setTitle(_translate("CurveNetMakerClass", "Save"))
        self.OpenMesh.setText(_translate("CurveNetMakerClass", "Mesh File"))
        self.SaveSegmentation.setText(_translate("CurveNetMakerClass", "Segmentation"))
        self.OpenMeshFile.setText(_translate("CurveNetMakerClass", "Mesh"))


from myglcanvas import MyGLCanvas
import CurveNetMaker_rc
